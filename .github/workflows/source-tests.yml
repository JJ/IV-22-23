name: "Tests sobre fuentes/API del repo del estudiante"
on:
  pull_request_target:
    paths:
      - "proyectos/*.md"

jobs:
  ops-on-pr:
    runs-on: ubuntu-latest
    outputs:
      user: ${{steps.pr_info.outputs.user}}
      repo: ${{steps.pr_info.outputs.repo}}
      checkout_repo: ${{steps.pr_info.outputs.checkout_repo}}
      objetivo: ${{steps.pr_info.outputs.objetivo}}
      rama: ${{steps.pr_info.outputs.rama}}
      pr_milestone: ${{steps.pr_info.outputs.pr_milestone}}
      pull_number: ${{steps.pr_info.outputs.pull_number}}
    steps:
      - id: pr_info
        name: Comprueba y analiza
        uses: JJ/grading-pr-info-gh-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ops-on-source:
    runs-on: ubuntu-latest
    outputs:
      docker_user: ${{steps.source-tests.outputs.docker_user}}
    needs: ops-on-pr
    env:
      user: ${{ needs.ops-on-pr.outputs.user }}
      repo: ${{ needs.ops-on-pr.outputs.repo }}
      checkout_repo: ${{ needs.ops-on-pr.outputs.checkout_repo }}
      objetivo: ${{ needs.ops-on-pr.outputs.objetivo }}
      rama: ${{ needs.ops-on-pr.outputs.rama }}
    steps:
      - name: Descarga fuente
        uses: actions/checkout@v2
        with:
          repository: ${{env.checkout_repo}}
          ref: ${{env.rama}}
      - name: Tests sobre fuentes
        id: source-tests
        with:
          fase: ${{env.objetivo}}
        uses: JJ/grading-source-tests-gh-action@main
      - name: Testea contenedor
        if: ${{env.objetivo >= 5 }}
        env:
          CONTAINER: ${{ env.docker_user }}/${{ env.repo }}
        run: docker run -t -v `pwd`:/app/test ${CONTAINER,,}
      - name: Testea API
        if: ${{env.objetivo >= 9 }}
        env:
          CONTAINER: ${{ env.docker_user }}/${{ env.repo }}
          ORDEN: ${{env.ORDEN}}
        run: docker run -t -v `pwd`:/app/test --entrypoint="" ${CONTAINER,,} sh -c "${ORDEN} build && ${ORDEN} install && ${ORDEN} test"
  ops-using-API:
    runs-on: ubuntu-latest
    needs: ops-on-pr
    env:
      user: ${{ needs.ops-on-pr.outputs.user }}
      repo: ${{ needs.ops-on-pr.outputs.repo }}
      objetivo: ${{ needs.ops-on-pr.outputs.objetivo }}
      pr_milestone: ${{ needs.ops-on-pr.outputs.pr_milestone }}
      rama: ${{ needs.ops-on-pr.outputs.rama }}
    steps:
      - name: Descarga fuente
        uses: actions/checkout@v2
      - name: Comprueba que el PR estÃ¡ asignado a un milestone
        uses: actions/github-script@v4
        if: ${{env.objetivo >= 2}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const {all_good, sorry } = require("./lib/mensajes.js")
            const milestone = process.env.pr_milestone
            if ( milestone === "" ) {
                core.setFailed( sorry( "El PR tiene que estar asignado a un milestone") )
            } else {
                console.log( all_good(`PR asignado al milestone ${milestone}`))
            }
  random-revisor:
    runs-on: ubuntu-latest
    needs: [ops-on-pr, ops-on-source, ops-using-API]
    if: needs.ops-on-pr.outputs.objetivo >= 1
    env:
      user: ${{ needs.ops-on-pr.outputs.user }}
      repo: ${{ needs.ops-on-pr.outputs.repo }}
      pull_number: ${{ needs.ops-on-pr.outputs.pull_number }}
      GITHUB_TOKEN: ${{ secrets.IV_COMMENTS_TOKEN }}
    steps:
      - name: Fuentes de este repo (para JSON)
        uses: actions/checkout@v2
      - name: Revisores aleatorios
        run: JJ/IV-22-23/scripts/random-reviewer
